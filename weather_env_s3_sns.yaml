---
- name: environment setup
  hosts: localhost
  vars_files: myvars.yaml
  tasks:
  - name: install system packages
    yum:
      name: "{{ item }}"
      state: latest
    loop:
      - python3
      - python3-pip
      - curl
      - unzip
  - name: upgrade ansible-core
    shell: "{{ item }}"
    loop:
      - 'python3 -m pip install --upgrade ansible-core'
  - name: install python dependencies
    pip:
      name: "{{ item }}"
      state: present
    loop:
      - boto3==1.28.0
      - botocore==1.31.0
      - python-dotenv==1.0.0
      - requests==2.28.2
  - name: check if aws cli is installed
    command: "which aws"
    register: aws_cli_check
    ignore_errors: true
  - name: download and unzip aws-cli
    unarchive:
      src: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
      dest: ../
      remote_src: yes
    when: aws_cli_check.rc != 0
  - name: install aws-cli and configure credentials
    shell: "{{ item }}"
    loop:
      - 'sudo ../aws/install'
      - 'aws configure set aws_access_key_id {{ accesskeyid }}'
      - 'aws configure set aws_secret_access_key {{ secretaccesskey }}'
      - 'aws configure set default.region {{ defaultregion }}'
    when: aws_cli_check.rc != 0
  - name: create s3 bucket
    amazon.aws.s3_bucket:
      name: "{{ bucketname }}"
      state: present
  tags: env


- name: setup sns notifications
  hosts: localhost
  gather_facts: false
  vars_files: myvars.yaml
  tasks:
  - name: create alarm sns topic and subscribe email
    community.aws.sns_topic:
      name: "weather-alerts"
      state: present
      display_name: "weather-alerts"
      subscriptions:
        - endpoint: "{{ emailendpoint }}"
          protocol: "email"
    register: sns_topic
  - name: append sns_arn to myvars.yaml
    lineinfile:
      path: ./myvars.yaml
      line: "sns_arn: \"{{ sns_topic['sns_arn'] }}\""
  tags: notifications
